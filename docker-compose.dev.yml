services:
  api:
    build:
      context: .
      target: api-dev
    ports:
      - "5075:8080"
    volumes:
      # Mount the whole repo so watch sees changes
      - ./:/src:cached
      # Persist NuGet + obj/bin caches for faster rebuilds
      - api-nuget:/root/.nuget/packages
      - api-obj:/src/OktaCapstone.Api/obj
      - api-bin:/src/OktaCapstone.Api/bin
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__Default: "Server=mssql,1433;Database=AppDb;User ID=sa;Password=Your_password123;Encrypt=True;TrustServerCertificate=True;"
    depends_on:
      mssql:
        condition: service_healthy
    # Optional: ensure web can reach api via http://api:8080
    networks: [devnet]

  blazor:
    build:
      context: .
      target: blazor-dev
    ports:
      - "8000:8080"
    volumes:
      - ./:/src:cached
      - blazor-nuget:/root/.nuget/packages
      - blazor-obj:/src/OktaCapstone.Blazor/obj
      - blazor-bin:/src/OktaCapstone.Blazor/bin
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # e.g. your app settings can point here:
      # API_BASE_URL: "http://api:8080"
    depends_on: [api]
    networks: [devnet]

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: "0:0"                 # avoids permission issues on Linux/macOS
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Your_password123"   # change in real use
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ['CMD-SHELL', '/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null || exit 1']
      interval: 10s
      timeout: 3s
      retries: 20
    networks: [devnet]

volumes:
  api-nuget: {}
  api-obj: {}
  api-bin: {}
  blazor-nuget: {}
  blazor-obj: {}
  blazor-bin: {}
  mssql-data: {}

networks:
  devnet: {}
